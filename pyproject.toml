[project]
name = "simple-logs-sender"
version = "0.1.0"
description = "Simple server that receives logs from rsyslog and sends them to other applications"
authors = [
    { name = "Igor Zyktin", email = "nicord@yandex.ru" },
]
readme = "README.md"
license = { text = "MIT License" }
requires-python = ">=3.10"
dependencies = [
    "ujson>=5.10.0",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.15.0",
    "ruff>=0.9.6",
]

[tool.ruff]
line-length = 100
target-version = "py310"

lint.select = [
    "A", # flake8-builtins
    "ARG", # flake8-unused-arguments
    "ASYNC", # flake8-async - starting from version 0.0.270
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
    "C4", # flake8-comprehensions
    "C90", # mccabe
    "COM", # flake8-commas
    "D", # pydocstyle
    "DTZ", # flake8-datetimez
    "E", # pycodestyle
    "EM", # flake8-errmsg
    "ERA", # eradicate
    "EXE", # flake8-executable
    "F", # Pyflakes
    "FA", # flake8-future-annotations
    "FBT", # flake8-boolean-trap
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "INT", # flake8-gettext
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL", # Pylint
    "PLC", # Convention
    "PLE", # Error
    "PLR", # Refactor
    "PLW", # Warning
    "PT", # flake8-pytest-style
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # Ruff-specific rules
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
    "YTT", # flake8-2020
]

lint.ignore = [
    "RUF003", # Comment contains ambiguous letter
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
    "COM812", # Checks for the absence of trailing commas
    "TRY400", # Use `logging.exception` instead of `logging.error`
]

[tool.ruff.lint.per-file-ignores]
"simple_logs_sender/__init__.py" = [
    "D104", # Missing docstring in public package
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.isort]
force-single-line = true
force-sort-within-sections = true
order-by-type = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "double"
docstring-quotes = "double"

[tool.ruff.lint.pylint]
max-args = 5

[tool.mypy]
disallow_untyped_defs = true
ignore_missing_imports = true
warn_return_any = true
warn_unused_configs = true
exclude = ["^venv"]
